services:
  app:
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env
    command: gunicorn --bind 0.0.0.0:8000 tag_a_bird_backend.app:app
    platform: linux/amd64
    environment:
      - FLASK_CONFIG_TYPE=${FLASK_CONFIG_TYPE}
      - FLASK_APP=${FLASK_APP}
      - FLASK_DATABASE_URI=${FLASK_DATABASE_URI}
      - FLASK_SQLALCHEMY_TRACK_MODIFICATIONS=${FLASK_SQLALCHEMY_TRACK_MODIFICATIONS}
      - FLASK_DEBUG=${FLASK_DEBUG}
      - FLASK_TESTING=${FLASK_TESTING}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - COREO_API_KEY=${COREO_API_KEY}
      - ADMIN_CREDENTIALS_EMAIL=${ADMIN_CREDENTIALS_EMAIL}
      - ADMIN_CREDENTIALS_PW=${ADMIN_CREDENTIALS_PW}
      - FLASK_SENTRY_DSN=${FLASK_SENTRY_DSN}

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    platform: linux/amd64

  test:
    build:
      context: .
      dockerfile: dockerfile
    depends_on:
      - app
      - db
    env_file:
      - .env
    volumes:
      - .:/tag_a_bird_backend
    command:
      ["sh", "-c", "poetry install && pytest --maxfail=1 --disable-warnings -v"]

volumes:
  postgres_data:
